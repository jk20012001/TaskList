layout(location = 0) out vec4 fragColorX;
  
void main()  {
#if CC_DISABLE_STRUCTURE_IN_FRAGMENT_SHADER
  float NoL = dot(-cc_mainLitDir.xyz, FSInput_worldNormal.xyz); //trigger ubo binding
  vec4 color = SurfacesFragmentModifyBaseColorAndTransparency();
#else
  // Surface
  SurfacesMaterialData surfaceData;
  CCSurfacesFragmentGetMaterialData(surfaceData);
  
  // Lighting
  highp vec4 shadowPos = vec4(0.0);
  vec2 shadowBias = vec2(0.0);
  #if CC_RECEIVE_SHADOW
    shadowPos = FSInput_shadowPos;
    shadowBias = FSInput_shadowBias;
  #endif

  LightingResult lightingResult;
  CCSurfacesLighting(lightingResult, surfaceData, shadowPos, shadowBias);

  // Debug composite view  
  #if CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE
    #if !CC_FORWARD_ADD || CC_FORWARD_ADD && ((CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE & CC_SURFACES_DEBUG_VIEW_COMPOSITE_DIRECT_DIFFUSE) || (CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE & CC_SURFACES_DEBUG_VIEW_COMPOSITE_DIRECT_SPECULAR))
      CCSurfacesDebugViewCompositeLightingResult(lightingResult);
    #endif
  #endif

  // Shading
  vec4 color = CCSurfacesShading(surfaceData, lightingResult);

  // Fog
  #if !CC_FORWARD_ADD && (!CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE || (CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE & CC_SURFACES_DEBUG_VIEW_COMPOSITE_FOG))
    float fogFactor = 0.0;
    #if !CC_USE_ACCURATE_FOG
      fogFactor = FSInput_fogFactor;
    #else
      CC_TRANSFER_FOG_BASE(vec4(FSInput_worldPos, 1.0), fogFactor);
    #endif
    CC_APPLY_FOG_BASE(color, fogFactor);
  #endif

  // Debug single view
  #if CC_SURFACES_DEBUG_VIEW_MODE
    vec4 debugColor = vec4(0.0, 0.0, 0.0, 1.0);
    #if !CC_FORWARD_ADD
      CCSurfacesDebugViewMeshData(debugColor);
      CCSurfacesDebugViewSurfaceData(debugColor, surfaceData);
      CCSurfacesDebugViewLightingResult(debugColor, lightingResult);
      #if CC_SURFACES_DEBUG_VIEW_MODE == CC_SURFACES_DEBUG_VIEW_FOG
        fogFactor = 1.0 - fogFactor;
        debugColor = vec4(fogFactor, fogFactor, fogFactor, 1.0);
      #endif
    #endif

    // only base pass or direct lighting is enabled in add pass
    #if !CC_FORWARD_ADD || CC_FORWARD_ADD && (CC_SURFACES_DEBUG_VIEW_MODE == CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE || CC_SURFACES_DEBUG_VIEW_MODE == CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR || CC_SURFACES_DEBUG_VIEW_MODE == CC_SURFACES_DEBUG_VIEW_DIRECT_ALL)
      CCSurfacesDebugViewLightingResult(debugColor, lightingResult);
    #endif

    fragColorX = debugColor;
    return;
  #endif
  
  // Color output
  #if CC_USE_HDR
    #if !CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE || (CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE & CC_SURFACES_DEBUG_VIEW_COMPOSITE_TONE_MAPPING)
      color.rgb = ACESToneMap(color.rgb);
    #endif
  #endif
  #if !CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE || (CC_SURFACES_DEBUG_VIEW_COMPOSITE_MODE & CC_SURFACES_DEBUG_VIEW_COMPOSITE_GAMMA_CORRECTION)
    color.rgb = LinearToSRGB(color.rgb);
  #endif
  CCSurfaceDebugDisplayInvalidNumber(color);
#endif

  fragColorX = color;
}
