// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.

vec4 packDepthToRGBA (float depth) {
  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;
  ret = fract(ret);
  ret -= vec4(ret.yzw, 0.0) / 255.0;
  return ret;
}

#define unpackRGBAToDepth(color) dot(color, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0))


// highp <--> 2 * mediump
#define DEFINE_PACK_HIGHP_FUNC(type) \
highp type unpackHighpData (type mainPart, type modPart) {\
  highp type data = mainPart;\
  return data + modPart;\
}\
void packHighpData (out type mainPart, out type modPart, highp type data) {\
  mainPart = fract(data);\
  modPart = data - mainPart;\
}\
highp type unpackHighpData (type mainPart, type modPart, const float modValue) {\
  highp type data = mainPart * modValue;\
  return data + modPart * modValue;\
}\
void packHighpData (out type mainPart, out type modPart, highp type data, const float modValue) {\
  highp type divide = data / modValue;\
  mainPart = floor(divide);\
  modPart = (data - mainPart * modValue) / modValue;\
}

DEFINE_PACK_HIGHP_FUNC(float)
DEFINE_PACK_HIGHP_FUNC(vec2)
DEFINE_PACK_HIGHP_FUNC(vec3)
DEFINE_PACK_HIGHP_FUNC(vec4)

#define HIGHP_VALUE_STRUCT_DEFINE(type, name) type name

// used for large range such as position
#define HIGHP_VALUE_FROM_STRUCT_DEFINED(value, defined) value = defined;
#define HIGHP_VALUE_TO_STRUCT_DEFINED(value, defined) defined = value;

// used for small range such as -1-1 normalized
#define HIGHP_VALUE_FROM_STRUCT_DEFINED_SMALL_RANGE(value, defined) value = defined;
#define HIGHP_VALUE_TO_STRUCT_DEFINED_SMALL_RANGE(value, defined) defined = value;
